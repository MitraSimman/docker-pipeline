version: 0.2

phases:
  pre_build:
    commands:
      - echo Deploy phase started on `date`
      - echo Logging in to AWS...
      - aws --version
      - aws sts get-caller-identity
      - ECS_SERVICE_STACK_NAME="${PROJECT_NAME}-${ENVIRONMENT}-ecs-service"
      - echo ECS Service Stack Name is $ECS_SERVICE_STACK_NAME
      - echo Infrastructure Stack Name is $INFRA_STACK_NAME
      
  build:
    commands:
      - echo "Starting ECS service deployment..."

      # Check if template file exists
      - test -f ecs-service.yml && echo "ecs-service.yml found" || (echo "ecs-service.yml NOT found" && exit 1)
      
      # Deploy ECS service using SAM
      - |
        sam deploy \
          --template-file ecs-service.yml \
          --stack-name $ECS_SERVICE_STACK_NAME \
          --parameter-overrides \
            ProjectName=$PROJECT_NAME \
            Environment=$ENVIRONMENT \
            InfraStackName=$INFRA_STACK_NAME \
          --capabilities CAPABILITY_IAM \
          --region $AWS_DEFAULT_REGION \
          --no-fail-on-empty-changeset \
          --debug
      
      - echo "Displaying recent CloudFormation stack events..."
      - aws cloudformation describe-stack-events --stack-name $ECS_SERVICE_STACK_NAME --region $AWS_DEFAULT_REGION --max-items 10 || echo "Could not retrieve stack events"
      
      - echo "Waiting for stack deployment to complete..."
      - aws cloudformation wait stack-deploy-complete --stack-name $ECS_SERVICE_STACK_NAME --region $AWS_DEFAULT_REGION

  
  post_build:
    commands:
      - echo ECS Service deployment completed on `date`
      - echo Getting ECS service details...
      - ECS_SERVICE_NAME=$(aws cloudformation describe-stacks --stack-name $ECS_SERVICE_STACK_NAME --region $AWS_DEFAULT_REGION --query "Stacks[0].Outputs[?OutputKey=='ECSServiceName'].OutputValue" --output text)
      - echo ECS Service Name is $ECS_SERVICE_NAME
      - |
        if [ "$ECS_SERVICE_NAME" != "None" ] && [ ! -z "$ECS_SERVICE_NAME" ]; then
          echo "ECS Service created/updated successfully: $ECS_SERVICE_NAME"
        else
          echo "Warning: Could not retrieve ECS service name or service not found"
        fi

artifacts:
  files:
    - '**/*'
  name: DeployArtifact